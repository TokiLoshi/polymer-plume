/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

const ACTION_MAP = {
	death: "AnimalArmature|AnimalArmature|AnimalArmature|Death",
	headbutt: "AnimalArmature|AnimalArmature|AnimalArmature|Headbutt",
	idle: "AnimalArmature|AnimalArmature|AnimalArmature|Idle",
	idleEating: "AnimalArmature|AnimalArmature|AnimalArmature|Idle_Eating",
	jumpLoop: "AnimalArmature|AnimalArmature|AnimalArmature|Jump_Loop",
	jumpStart: "AnimalArmature|AnimalArmature|AnimalArmature|Jump_Start",
	run: "AnimalArmature|AnimalArmature|AnimalArmature|Run",
	walk: "AnimalArmature|AnimalArmature|AnimalArmature|Walk",
};

export default function Cat(props) {
	const group = useRef();
	const { nodes, materials, animations } = useGLTF("models/Cat.glb");
	const { actions, names } = useAnimations(animations, group);
	console.log("Cat Actions: ", actions);
	console.log("Names: ", names);

	useEffect(() => {
		const walkAction = actions[ACTION_MAP.walk];
		if (walkAction) {
			walkAction.play();
		}
	}, [actions]);

	return (
		<group ref={group} {...props} dispose={null}>
			<group name='Root_Scene'>
				<group name='RootNode'>
					<group
						name='AnimalArmature'
						rotation={[-Math.PI / 2, 0, 0]}
						scale={100}>
						<primitive object={nodes.All} />
						<primitive object={nodes.Root} />
					</group>
					<skinnedMesh
						name='Cat'
						geometry={nodes.Cat.geometry}
						material={materials.AtlasMaterial}
						skeleton={nodes.Cat.skeleton}
						rotation={[-Math.PI / 2, 0, 0]}
						scale={100}
					/>
				</group>
			</group>
		</group>
	);
}

useGLTF.preload("models/Cat.glb");
